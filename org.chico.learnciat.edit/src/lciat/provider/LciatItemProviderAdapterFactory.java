/**
 */
package lciat.provider;

import java.util.ArrayList;
import java.util.Collection;

import lciat.util.LciatAdapterFactory;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class LciatItemProviderAdapterFactory extends LciatAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public LciatItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.LCIANDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LCIANDiagramItemProvider lcianDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.LCIANDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLCIANDiagramAdapter() {
		if (lcianDiagramItemProvider == null) {
			lcianDiagramItemProvider = new LCIANDiagramItemProvider(this);
		}

		return lcianDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Sociogram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SociogramItemProvider sociogramItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Sociogram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSociogramAdapter() {
		if (sociogramItemProvider == null) {
			sociogramItemProvider = new SociogramItemProvider(this);
		}

		return sociogramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.SociogramNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SociogramNodeItemProvider sociogramNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.SociogramNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSociogramNodeAdapter() {
		if (sociogramNodeItemProvider == null) {
			sociogramNodeItemProvider = new SociogramNodeItemProvider(this);
		}

		return sociogramNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Rol} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolItemProvider rolItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Rol}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolAdapter() {
		if (rolItemProvider == null) {
			rolItemProvider = new RolItemProvider(this);
		}

		return rolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Group} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupItemProvider groupItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Group}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupAdapter() {
		if (groupItemProvider == null) {
			groupItemProvider = new GroupItemProvider(this);
		}

		return groupItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.SociogramLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SociogramLinkItemProvider sociogramLinkItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.SociogramLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSociogramLinkAdapter() {
		if (sociogramLinkItemProvider == null) {
			sociogramLinkItemProvider = new SociogramLinkItemProvider(this);
		}

		return sociogramLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Inheritance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InheritanceItemProvider inheritanceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Inheritance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInheritanceAdapter() {
		if (inheritanceItemProvider == null) {
			inheritanceItemProvider = new InheritanceItemProvider(this);
		}

		return inheritanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Acting} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ActingItemProvider actingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Acting}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createActingAdapter() {
		if (actingItemProvider == null) {
			actingItemProvider = new ActingItemProvider(this);
		}

		return actingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Association} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssociationItemProvider associationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Association}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssociationAdapter() {
		if (associationItemProvider == null) {
			associationItemProvider = new AssociationItemProvider(this);
		}

		return associationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.LearningDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LearningDiagramItemProvider learningDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.LearningDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLearningDiagramAdapter() {
		if (learningDiagramItemProvider == null) {
			learningDiagramItemProvider = new LearningDiagramItemProvider(this);
		}

		return learningDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.LearningNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LearningNodeItemProvider learningNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.LearningNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLearningNodeAdapter() {
		if (learningNodeItemProvider == null) {
			learningNodeItemProvider = new LearningNodeItemProvider(this);
		}

		return learningNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Init} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitItemProvider initItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Init}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitAdapter() {
		if (initItemProvider == null) {
			initItemProvider = new InitItemProvider(this);
		}

		return initItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.End} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EndItemProvider endItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.End}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEndAdapter() {
		if (endItemProvider == null) {
			endItemProvider = new EndItemProvider(this);
		}

		return endItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.LearningActivity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LearningActivityItemProvider learningActivityItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.LearningActivity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLearningActivityAdapter() {
		if (learningActivityItemProvider == null) {
			learningActivityItemProvider = new LearningActivityItemProvider(this);
		}

		return learningActivityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.IndividualTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndividualTaskItemProvider individualTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.IndividualTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndividualTaskAdapter() {
		if (individualTaskItemProvider == null) {
			individualTaskItemProvider = new IndividualTaskItemProvider(this);
		}

		return individualTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.GroupTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupTaskItemProvider groupTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.GroupTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupTaskAdapter() {
		if (groupTaskItemProvider == null) {
			groupTaskItemProvider = new GroupTaskItemProvider(this);
		}

		return groupTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.AbstractTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbstractTaskItemProvider abstractTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.AbstractTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbstractTaskAdapter() {
		if (abstractTaskItemProvider == null) {
			abstractTaskItemProvider = new AbstractTaskItemProvider(this);
		}

		return abstractTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.DetailedAbstractTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DetailedAbstractTaskItemProvider detailedAbstractTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.DetailedAbstractTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDetailedAbstractTaskAdapter() {
		if (detailedAbstractTaskItemProvider == null) {
			detailedAbstractTaskItemProvider = new DetailedAbstractTaskItemProvider(this);
		}

		return detailedAbstractTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Object} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectItemProvider objectItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Object}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectAdapter() {
		if (objectItemProvider == null) {
			objectItemProvider = new ObjectItemProvider(this);
		}

		return objectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.TemporalCondition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TemporalConditionItemProvider temporalConditionItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.TemporalCondition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTemporalConditionAdapter() {
		if (temporalConditionItemProvider == null) {
			temporalConditionItemProvider = new TemporalConditionItemProvider(this);
		}

		return temporalConditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Notification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotificationItemProvider notificationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Notification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotificationAdapter() {
		if (notificationItemProvider == null) {
			notificationItemProvider = new NotificationItemProvider(this);
		}

		return notificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Condition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionItemProvider conditionItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Condition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionAdapter() {
		if (conditionItemProvider == null) {
			conditionItemProvider = new ConditionItemProvider(this);
		}

		return conditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Subtype} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubtypeItemProvider subtypeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Subtype}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubtypeAdapter() {
		if (subtypeItemProvider == null) {
			subtypeItemProvider = new SubtypeItemProvider(this);
		}

		return subtypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Assimilative} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AssimilativeItemProvider assimilativeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Assimilative}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAssimilativeAdapter() {
		if (assimilativeItemProvider == null) {
			assimilativeItemProvider = new AssimilativeItemProvider(this);
		}

		return assimilativeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.InformationHandling} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InformationHandlingItemProvider informationHandlingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.InformationHandling}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInformationHandlingAdapter() {
		if (informationHandlingItemProvider == null) {
			informationHandlingItemProvider = new InformationHandlingItemProvider(this);
		}

		return informationHandlingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Adaptive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdaptiveItemProvider adaptiveItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Adaptive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdaptiveAdapter() {
		if (adaptiveItemProvider == null) {
			adaptiveItemProvider = new AdaptiveItemProvider(this);
		}

		return adaptiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Communicative} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicativeItemProvider communicativeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Communicative}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicativeAdapter() {
		if (communicativeItemProvider == null) {
			communicativeItemProvider = new CommunicativeItemProvider(this);
		}

		return communicativeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Productive} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProductiveItemProvider productiveItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Productive}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProductiveAdapter() {
		if (productiveItemProvider == null) {
			productiveItemProvider = new ProductiveItemProvider(this);
		}

		return productiveItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Experiential} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExperientialItemProvider experientialItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Experiential}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExperientialAdapter() {
		if (experientialItemProvider == null) {
			experientialItemProvider = new ExperientialItemProvider(this);
		}

		return experientialItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Evaluative} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EvaluativeItemProvider evaluativeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Evaluative}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEvaluativeAdapter() {
		if (evaluativeItemProvider == null) {
			evaluativeItemProvider = new EvaluativeItemProvider(this);
		}

		return evaluativeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Support} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SupportItemProvider supportItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Support}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSupportAdapter() {
		if (supportItemProvider == null) {
			supportItemProvider = new SupportItemProvider(this);
		}

		return supportItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Modality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModalityItemProvider modalityItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Modality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModalityAdapter() {
		if (modalityItemProvider == null) {
			modalityItemProvider = new ModalityItemProvider(this);
		}

		return modalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.FaceToFace} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FaceToFaceItemProvider faceToFaceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.FaceToFace}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFaceToFaceAdapter() {
		if (faceToFaceItemProvider == null) {
			faceToFaceItemProvider = new FaceToFaceItemProvider(this);
		}

		return faceToFaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.ComputerSupported} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComputerSupportedItemProvider computerSupportedItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.ComputerSupported}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComputerSupportedAdapter() {
		if (computerSupportedItemProvider == null) {
			computerSupportedItemProvider = new ComputerSupportedItemProvider(this);
		}

		return computerSupportedItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Online} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OnlineItemProvider onlineItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Online}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOnlineAdapter() {
		if (onlineItemProvider == null) {
			onlineItemProvider = new OnlineItemProvider(this);
		}

		return onlineItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.LearningLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LearningLinkItemProvider learningLinkItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.LearningLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLearningLinkAdapter() {
		if (learningLinkItemProvider == null) {
			learningLinkItemProvider = new LearningLinkItemProvider(this);
		}

		return learningLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.EnablingWOInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnablingWOInformationItemProvider enablingWOInformationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.EnablingWOInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnablingWOInformationAdapter() {
		if (enablingWOInformationItemProvider == null) {
			enablingWOInformationItemProvider = new EnablingWOInformationItemProvider(this);
		}

		return enablingWOInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.EnablingWInformation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnablingWInformationItemProvider enablingWInformationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.EnablingWInformation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnablingWInformationAdapter() {
		if (enablingWInformationItemProvider == null) {
			enablingWInformationItemProvider = new EnablingWInformationItemProvider(this);
		}

		return enablingWInformationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Choice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceItemProvider choiceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Choice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceAdapter() {
		if (choiceItemProvider == null) {
			choiceItemProvider = new ChoiceItemProvider(this);
		}

		return choiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Concurrency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcurrencyItemProvider concurrencyItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Concurrency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcurrencyAdapter() {
		if (concurrencyItemProvider == null) {
			concurrencyItemProvider = new ConcurrencyItemProvider(this);
		}

		return concurrencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Tool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ToolItemProvider toolItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Tool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createToolAdapter() {
		if (toolItemProvider == null) {
			toolItemProvider = new ToolItemProvider(this);
		}

		return toolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.GraphicalEditor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GraphicalEditorItemProvider graphicalEditorItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.GraphicalEditor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGraphicalEditorAdapter() {
		if (graphicalEditorItemProvider == null) {
			graphicalEditorItemProvider = new GraphicalEditorItemProvider(this);
		}

		return graphicalEditorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.TextEditor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TextEditorItemProvider textEditorItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.TextEditor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTextEditorAdapter() {
		if (textEditorItemProvider == null) {
			textEditorItemProvider = new TextEditorItemProvider(this);
		}

		return textEditorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CodeEditor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CodeEditorItemProvider codeEditorItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CodeEditor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCodeEditorAdapter() {
		if (codeEditorItemProvider == null) {
			codeEditorItemProvider = new CodeEditorItemProvider(this);
		}

		return codeEditorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.WebViewer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WebViewerItemProvider webViewerItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.WebViewer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWebViewerAdapter() {
		if (webViewerItemProvider == null) {
			webViewerItemProvider = new WebViewerItemProvider(this);
		}

		return webViewerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.SessionPanel} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SessionPanelItemProvider sessionPanelItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.SessionPanel}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSessionPanelAdapter() {
		if (sessionPanelItemProvider == null) {
			sessionPanelItemProvider = new SessionPanelItemProvider(this);
		}

		return sessionPanelItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Chat} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChatItemProvider chatItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Chat}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChatAdapter() {
		if (chatItemProvider == null) {
			chatItemProvider = new ChatItemProvider(this);
		}

		return chatItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.TurnTakingTool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TurnTakingToolItemProvider turnTakingToolItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.TurnTakingTool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTurnTakingToolAdapter() {
		if (turnTakingToolItemProvider == null) {
			turnTakingToolItemProvider = new TurnTakingToolItemProvider(this);
		}

		return turnTakingToolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Telepointer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TelepointerItemProvider telepointerItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Telepointer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTelepointerAdapter() {
		if (telepointerItemProvider == null) {
			telepointerItemProvider = new TelepointerItemProvider(this);
		}

		return telepointerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.RadarView} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RadarViewItemProvider radarViewItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.RadarView}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRadarViewAdapter() {
		if (radarViewItemProvider == null) {
			radarViewItemProvider = new RadarViewItemProvider(this);
		}

		return radarViewItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Properties} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertiesItemProvider propertiesItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Properties}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertiesAdapter() {
		if (propertiesItemProvider == null) {
			propertiesItemProvider = new PropertiesItemProvider(this);
		}

		return propertiesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Console} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConsoleItemProvider consoleItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Console}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConsoleAdapter() {
		if (consoleItemProvider == null) {
			consoleItemProvider = new ConsoleItemProvider(this);
		}

		return consoleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Problems} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProblemsItemProvider problemsItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Problems}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProblemsAdapter() {
		if (problemsItemProvider == null) {
			problemsItemProvider = new ProblemsItemProvider(this);
		}

		return problemsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Traceability} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TraceabilityItemProvider traceabilityItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Traceability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTraceabilityAdapter() {
		if (traceabilityItemProvider == null) {
			traceabilityItemProvider = new TraceabilityItemProvider(this);
		}

		return traceabilityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CTTDiagram} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CTTDiagramItemProvider cttDiagramItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CTTDiagram}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCTTDiagramAdapter() {
		if (cttDiagramItemProvider == null) {
			cttDiagramItemProvider = new CTTDiagramItemProvider(this);
		}

		return cttDiagramItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CTTTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CTTTaskItemProvider cttTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CTTTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCTTTaskAdapter() {
		if (cttTaskItemProvider == null) {
			cttTaskItemProvider = new CTTTaskItemProvider(this);
		}

		return cttTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.ExclusiveEdition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusiveEditionItemProvider exclusiveEditionItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.ExclusiveEdition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusiveEditionAdapter() {
		if (exclusiveEditionItemProvider == null) {
			exclusiveEditionItemProvider = new ExclusiveEditionItemProvider(this);
		}

		return exclusiveEditionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CollaborativeVisualization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollaborativeVisualizationItemProvider collaborativeVisualizationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CollaborativeVisualization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollaborativeVisualizationAdapter() {
		if (collaborativeVisualizationItemProvider == null) {
			collaborativeVisualizationItemProvider = new CollaborativeVisualizationItemProvider(this);
		}

		return collaborativeVisualizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.IndividualVisualization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndividualVisualizationItemProvider individualVisualizationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.IndividualVisualization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndividualVisualizationAdapter() {
		if (individualVisualizationItemProvider == null) {
			individualVisualizationItemProvider = new IndividualVisualizationItemProvider(this);
		}

		return individualVisualizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.UserTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UserTaskItemProvider userTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.UserTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUserTaskAdapter() {
		if (userTaskItemProvider == null) {
			userTaskItemProvider = new UserTaskItemProvider(this);
		}

		return userTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CTTAbstractTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CTTAbstractTaskItemProvider cttAbstractTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CTTAbstractTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCTTAbstractTaskAdapter() {
		if (cttAbstractTaskItemProvider == null) {
			cttAbstractTaskItemProvider = new CTTAbstractTaskItemProvider(this);
		}

		return cttAbstractTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.InteractiveTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InteractiveTaskItemProvider interactiveTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.InteractiveTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInteractiveTaskAdapter() {
		if (interactiveTaskItemProvider == null) {
			interactiveTaskItemProvider = new InteractiveTaskItemProvider(this);
		}

		return interactiveTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CTTCollaborativeTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CTTCollaborativeTaskItemProvider cttCollaborativeTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CTTCollaborativeTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCTTCollaborativeTaskAdapter() {
		if (cttCollaborativeTaskItemProvider == null) {
			cttCollaborativeTaskItemProvider = new CTTCollaborativeTaskItemProvider(this);
		}

		return cttCollaborativeTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.ApplicationTask} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ApplicationTaskItemProvider applicationTaskItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.ApplicationTask}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createApplicationTaskAdapter() {
		if (applicationTaskItemProvider == null) {
			applicationTaskItemProvider = new ApplicationTaskItemProvider(this);
		}

		return applicationTaskItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.CTTLink} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CTTLinkItemProvider cttLinkItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.CTTLink}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCTTLinkAdapter() {
		if (cttLinkItemProvider == null) {
			cttLinkItemProvider = new CTTLinkItemProvider(this);
		}

		return cttLinkItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Aggregation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregationItemProvider aggregationItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Aggregation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregationAdapter() {
		if (aggregationItemProvider == null) {
			aggregationItemProvider = new AggregationItemProvider(this);
		}

		return aggregationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Enabling} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnablingItemProvider enablingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Enabling}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnablingAdapter() {
		if (enablingItemProvider == null) {
			enablingItemProvider = new EnablingItemProvider(this);
		}

		return enablingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.Disabling} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DisablingItemProvider disablingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.Disabling}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDisablingAdapter() {
		if (disablingItemProvider == null) {
			disablingItemProvider = new DisablingItemProvider(this);
		}

		return disablingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.EnablingWithInformationPassing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnablingWithInformationPassingItemProvider enablingWithInformationPassingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.EnablingWithInformationPassing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnablingWithInformationPassingAdapter() {
		if (enablingWithInformationPassingItemProvider == null) {
			enablingWithInformationPassingItemProvider = new EnablingWithInformationPassingItemProvider(this);
		}

		return enablingWithInformationPassingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.DisablingWithInformationPassing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DisablingWithInformationPassingItemProvider disablingWithInformationPassingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.DisablingWithInformationPassing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDisablingWithInformationPassingAdapter() {
		if (disablingWithInformationPassingItemProvider == null) {
			disablingWithInformationPassingItemProvider = new DisablingWithInformationPassingItemProvider(this);
		}

		return disablingWithInformationPassingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.IndependentConcurrency} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndependentConcurrencyItemProvider independentConcurrencyItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.IndependentConcurrency}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndependentConcurrencyAdapter() {
		if (independentConcurrencyItemProvider == null) {
			independentConcurrencyItemProvider = new IndependentConcurrencyItemProvider(this);
		}

		return independentConcurrencyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.OrderIndependence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OrderIndependenceItemProvider orderIndependenceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.OrderIndependence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOrderIndependenceAdapter() {
		if (orderIndependenceItemProvider == null) {
			orderIndependenceItemProvider = new OrderIndependenceItemProvider(this);
		}

		return orderIndependenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.SuspendResume} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SuspendResumeItemProvider suspendResumeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.SuspendResume}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSuspendResumeAdapter() {
		if (suspendResumeItemProvider == null) {
			suspendResumeItemProvider = new SuspendResumeItemProvider(this);
		}

		return suspendResumeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.ConcurrencyWithInformationPassing} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConcurrencyWithInformationPassingItemProvider concurrencyWithInformationPassingItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.ConcurrencyWithInformationPassing}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConcurrencyWithInformationPassingAdapter() {
		if (concurrencyWithInformationPassingItemProvider == null) {
			concurrencyWithInformationPassingItemProvider = new ConcurrencyWithInformationPassingItemProvider(this);
		}

		return concurrencyWithInformationPassingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.DeterministicChoice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeterministicChoiceItemProvider deterministicChoiceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.DeterministicChoice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeterministicChoiceAdapter() {
		if (deterministicChoiceItemProvider == null) {
			deterministicChoiceItemProvider = new DeterministicChoiceItemProvider(this);
		}

		return deterministicChoiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.UndeterministicChoice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UndeterministicChoiceItemProvider undeterministicChoiceItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.UndeterministicChoice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUndeterministicChoiceAdapter() {
		if (undeterministicChoiceItemProvider == null) {
			undeterministicChoiceItemProvider = new UndeterministicChoiceItemProvider(this);
		}

		return undeterministicChoiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent1ItemProvider molefContent1ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent1Adapter() {
		if (molefContent1ItemProvider == null) {
			molefContent1ItemProvider = new MolefContent1ItemProvider(this);
		}

		return molefContent1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent2ItemProvider molefContent2ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent2Adapter() {
		if (molefContent2ItemProvider == null) {
			molefContent2ItemProvider = new MolefContent2ItemProvider(this);
		}

		return molefContent2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent3ItemProvider molefContent3ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent3Adapter() {
		if (molefContent3ItemProvider == null) {
			molefContent3ItemProvider = new MolefContent3ItemProvider(this);
		}

		return molefContent3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent4ItemProvider molefContent4ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent4Adapter() {
		if (molefContent4ItemProvider == null) {
			molefContent4ItemProvider = new MolefContent4ItemProvider(this);
		}

		return molefContent4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent5ItemProvider molefContent5ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent5Adapter() {
		if (molefContent5ItemProvider == null) {
			molefContent5ItemProvider = new MolefContent5ItemProvider(this);
		}

		return molefContent5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefContent6} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefContent6ItemProvider molefContent6ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefContent6}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefContent6Adapter() {
		if (molefContent6ItemProvider == null) {
			molefContent6ItemProvider = new MolefContent6ItemProvider(this);
		}

		return molefContent6ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTaskAndActivitiesNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTaskAndActivitiesNodeItemProvider molefTaskAndActivitiesNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTaskAndActivitiesNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTaskAndActivitiesNodeAdapter() {
		if (molefTaskAndActivitiesNodeItemProvider == null) {
			molefTaskAndActivitiesNodeItemProvider = new MolefTaskAndActivitiesNodeItemProvider(this);
		}

		return molefTaskAndActivitiesNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities1ItemProvider molefTActivities1ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities1Adapter() {
		if (molefTActivities1ItemProvider == null) {
			molefTActivities1ItemProvider = new MolefTActivities1ItemProvider(this);
		}

		return molefTActivities1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities2ItemProvider molefTActivities2ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities2Adapter() {
		if (molefTActivities2ItemProvider == null) {
			molefTActivities2ItemProvider = new MolefTActivities2ItemProvider(this);
		}

		return molefTActivities2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities3ItemProvider molefTActivities3ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities3Adapter() {
		if (molefTActivities3ItemProvider == null) {
			molefTActivities3ItemProvider = new MolefTActivities3ItemProvider(this);
		}

		return molefTActivities3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities4ItemProvider molefTActivities4ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities4Adapter() {
		if (molefTActivities4ItemProvider == null) {
			molefTActivities4ItemProvider = new MolefTActivities4ItemProvider(this);
		}

		return molefTActivities4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities5ItemProvider molefTActivities5ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities5Adapter() {
		if (molefTActivities5ItemProvider == null) {
			molefTActivities5ItemProvider = new MolefTActivities5ItemProvider(this);
		}

		return molefTActivities5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities6} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities6ItemProvider molefTActivities6ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities6}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities6Adapter() {
		if (molefTActivities6ItemProvider == null) {
			molefTActivities6ItemProvider = new MolefTActivities6ItemProvider(this);
		}

		return molefTActivities6ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities7} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities7ItemProvider molefTActivities7ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities7}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities7Adapter() {
		if (molefTActivities7ItemProvider == null) {
			molefTActivities7ItemProvider = new MolefTActivities7ItemProvider(this);
		}

		return molefTActivities7ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefTActivities8} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefTActivities8ItemProvider molefTActivities8ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefTActivities8}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefTActivities8Adapter() {
		if (molefTActivities8ItemProvider == null) {
			molefTActivities8ItemProvider = new MolefTActivities8ItemProvider(this);
		}

		return molefTActivities8ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefSocialNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefSocialNodeItemProvider molefSocialNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefSocialNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefSocialNodeAdapter() {
		if (molefSocialNodeItemProvider == null) {
			molefSocialNodeItemProvider = new MolefSocialNodeItemProvider(this);
		}

		return molefSocialNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefSocial1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefSocial1ItemProvider molefSocial1ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefSocial1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefSocial1Adapter() {
		if (molefSocial1ItemProvider == null) {
			molefSocial1ItemProvider = new MolefSocial1ItemProvider(this);
		}

		return molefSocial1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefSocial2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefSocial2ItemProvider molefSocial2ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefSocial2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefSocial2Adapter() {
		if (molefSocial2ItemProvider == null) {
			molefSocial2ItemProvider = new MolefSocial2ItemProvider(this);
		}

		return molefSocial2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefSocial3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefSocial3ItemProvider molefSocial3ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefSocial3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefSocial3Adapter() {
		if (molefSocial3ItemProvider == null) {
			molefSocial3ItemProvider = new MolefSocial3ItemProvider(this);
		}

		return molefSocial3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefSocial4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefSocial4ItemProvider molefSocial4ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefSocial4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefSocial4Adapter() {
		if (molefSocial4ItemProvider == null) {
			molefSocial4ItemProvider = new MolefSocial4ItemProvider(this);
		}

		return molefSocial4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalizationNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalizationNodeItemProvider molefPersonalizationNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalizationNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalizationNodeAdapter() {
		if (molefPersonalizationNodeItemProvider == null) {
			molefPersonalizationNodeItemProvider = new MolefPersonalizationNodeItemProvider(this);
		}

		return molefPersonalizationNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalization1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalization1ItemProvider molefPersonalization1ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalization1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalization1Adapter() {
		if (molefPersonalization1ItemProvider == null) {
			molefPersonalization1ItemProvider = new MolefPersonalization1ItemProvider(this);
		}

		return molefPersonalization1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalization2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalization2ItemProvider molefPersonalization2ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalization2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalization2Adapter() {
		if (molefPersonalization2ItemProvider == null) {
			molefPersonalization2ItemProvider = new MolefPersonalization2ItemProvider(this);
		}

		return molefPersonalization2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalization3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalization3ItemProvider molefPersonalization3ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalization3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalization3Adapter() {
		if (molefPersonalization3ItemProvider == null) {
			molefPersonalization3ItemProvider = new MolefPersonalization3ItemProvider(this);
		}

		return molefPersonalization3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalization4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalization4ItemProvider molefPersonalization4ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalization4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalization4Adapter() {
		if (molefPersonalization4ItemProvider == null) {
			molefPersonalization4ItemProvider = new MolefPersonalization4ItemProvider(this);
		}

		return molefPersonalization4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefPersonalization5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefPersonalization5ItemProvider molefPersonalization5ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefPersonalization5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefPersonalization5Adapter() {
		if (molefPersonalization5ItemProvider == null) {
			molefPersonalization5ItemProvider = new MolefPersonalization5ItemProvider(this);
		}

		return molefPersonalization5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimediaNode} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimediaNodeItemProvider molefMultimediaNodeItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimediaNode}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimediaNodeAdapter() {
		if (molefMultimediaNodeItemProvider == null) {
			molefMultimediaNodeItemProvider = new MolefMultimediaNodeItemProvider(this);
		}

		return molefMultimediaNodeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia1ItemProvider molefMultimedia1ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia1Adapter() {
		if (molefMultimedia1ItemProvider == null) {
			molefMultimedia1ItemProvider = new MolefMultimedia1ItemProvider(this);
		}

		return molefMultimedia1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia2ItemProvider molefMultimedia2ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia2Adapter() {
		if (molefMultimedia2ItemProvider == null) {
			molefMultimedia2ItemProvider = new MolefMultimedia2ItemProvider(this);
		}

		return molefMultimedia2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia3ItemProvider molefMultimedia3ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia3Adapter() {
		if (molefMultimedia3ItemProvider == null) {
			molefMultimedia3ItemProvider = new MolefMultimedia3ItemProvider(this);
		}

		return molefMultimedia3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia4ItemProvider molefMultimedia4ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia4Adapter() {
		if (molefMultimedia4ItemProvider == null) {
			molefMultimedia4ItemProvider = new MolefMultimedia4ItemProvider(this);
		}

		return molefMultimedia4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia5ItemProvider molefMultimedia5ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia5Adapter() {
		if (molefMultimedia5ItemProvider == null) {
			molefMultimedia5ItemProvider = new MolefMultimedia5ItemProvider(this);
		}

		return molefMultimedia5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia6} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia6ItemProvider molefMultimedia6ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia6}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia6Adapter() {
		if (molefMultimedia6ItemProvider == null) {
			molefMultimedia6ItemProvider = new MolefMultimedia6ItemProvider(this);
		}

		return molefMultimedia6ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link lciat.MolefMultimedia7} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MolefMultimedia7ItemProvider molefMultimedia7ItemProvider;

	/**
	 * This creates an adapter for a {@link lciat.MolefMultimedia7}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMolefMultimedia7Adapter() {
		if (molefMultimedia7ItemProvider == null) {
			molefMultimedia7ItemProvider = new MolefMultimedia7ItemProvider(this);
		}

		return molefMultimedia7ItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (lcianDiagramItemProvider != null) lcianDiagramItemProvider.dispose();
		if (sociogramItemProvider != null) sociogramItemProvider.dispose();
		if (sociogramNodeItemProvider != null) sociogramNodeItemProvider.dispose();
		if (rolItemProvider != null) rolItemProvider.dispose();
		if (groupItemProvider != null) groupItemProvider.dispose();
		if (sociogramLinkItemProvider != null) sociogramLinkItemProvider.dispose();
		if (inheritanceItemProvider != null) inheritanceItemProvider.dispose();
		if (actingItemProvider != null) actingItemProvider.dispose();
		if (associationItemProvider != null) associationItemProvider.dispose();
		if (learningDiagramItemProvider != null) learningDiagramItemProvider.dispose();
		if (learningNodeItemProvider != null) learningNodeItemProvider.dispose();
		if (initItemProvider != null) initItemProvider.dispose();
		if (endItemProvider != null) endItemProvider.dispose();
		if (learningActivityItemProvider != null) learningActivityItemProvider.dispose();
		if (individualTaskItemProvider != null) individualTaskItemProvider.dispose();
		if (groupTaskItemProvider != null) groupTaskItemProvider.dispose();
		if (abstractTaskItemProvider != null) abstractTaskItemProvider.dispose();
		if (detailedAbstractTaskItemProvider != null) detailedAbstractTaskItemProvider.dispose();
		if (objectItemProvider != null) objectItemProvider.dispose();
		if (temporalConditionItemProvider != null) temporalConditionItemProvider.dispose();
		if (notificationItemProvider != null) notificationItemProvider.dispose();
		if (conditionItemProvider != null) conditionItemProvider.dispose();
		if (subtypeItemProvider != null) subtypeItemProvider.dispose();
		if (assimilativeItemProvider != null) assimilativeItemProvider.dispose();
		if (informationHandlingItemProvider != null) informationHandlingItemProvider.dispose();
		if (adaptiveItemProvider != null) adaptiveItemProvider.dispose();
		if (communicativeItemProvider != null) communicativeItemProvider.dispose();
		if (productiveItemProvider != null) productiveItemProvider.dispose();
		if (experientialItemProvider != null) experientialItemProvider.dispose();
		if (evaluativeItemProvider != null) evaluativeItemProvider.dispose();
		if (supportItemProvider != null) supportItemProvider.dispose();
		if (modalityItemProvider != null) modalityItemProvider.dispose();
		if (faceToFaceItemProvider != null) faceToFaceItemProvider.dispose();
		if (computerSupportedItemProvider != null) computerSupportedItemProvider.dispose();
		if (onlineItemProvider != null) onlineItemProvider.dispose();
		if (learningLinkItemProvider != null) learningLinkItemProvider.dispose();
		if (enablingWOInformationItemProvider != null) enablingWOInformationItemProvider.dispose();
		if (enablingWInformationItemProvider != null) enablingWInformationItemProvider.dispose();
		if (choiceItemProvider != null) choiceItemProvider.dispose();
		if (concurrencyItemProvider != null) concurrencyItemProvider.dispose();
		if (toolItemProvider != null) toolItemProvider.dispose();
		if (graphicalEditorItemProvider != null) graphicalEditorItemProvider.dispose();
		if (textEditorItemProvider != null) textEditorItemProvider.dispose();
		if (codeEditorItemProvider != null) codeEditorItemProvider.dispose();
		if (webViewerItemProvider != null) webViewerItemProvider.dispose();
		if (sessionPanelItemProvider != null) sessionPanelItemProvider.dispose();
		if (chatItemProvider != null) chatItemProvider.dispose();
		if (turnTakingToolItemProvider != null) turnTakingToolItemProvider.dispose();
		if (telepointerItemProvider != null) telepointerItemProvider.dispose();
		if (radarViewItemProvider != null) radarViewItemProvider.dispose();
		if (propertiesItemProvider != null) propertiesItemProvider.dispose();
		if (consoleItemProvider != null) consoleItemProvider.dispose();
		if (problemsItemProvider != null) problemsItemProvider.dispose();
		if (traceabilityItemProvider != null) traceabilityItemProvider.dispose();
		if (cttDiagramItemProvider != null) cttDiagramItemProvider.dispose();
		if (cttTaskItemProvider != null) cttTaskItemProvider.dispose();
		if (exclusiveEditionItemProvider != null) exclusiveEditionItemProvider.dispose();
		if (collaborativeVisualizationItemProvider != null) collaborativeVisualizationItemProvider.dispose();
		if (individualVisualizationItemProvider != null) individualVisualizationItemProvider.dispose();
		if (userTaskItemProvider != null) userTaskItemProvider.dispose();
		if (cttAbstractTaskItemProvider != null) cttAbstractTaskItemProvider.dispose();
		if (interactiveTaskItemProvider != null) interactiveTaskItemProvider.dispose();
		if (cttCollaborativeTaskItemProvider != null) cttCollaborativeTaskItemProvider.dispose();
		if (applicationTaskItemProvider != null) applicationTaskItemProvider.dispose();
		if (cttLinkItemProvider != null) cttLinkItemProvider.dispose();
		if (aggregationItemProvider != null) aggregationItemProvider.dispose();
		if (enablingItemProvider != null) enablingItemProvider.dispose();
		if (disablingItemProvider != null) disablingItemProvider.dispose();
		if (enablingWithInformationPassingItemProvider != null) enablingWithInformationPassingItemProvider.dispose();
		if (disablingWithInformationPassingItemProvider != null) disablingWithInformationPassingItemProvider.dispose();
		if (independentConcurrencyItemProvider != null) independentConcurrencyItemProvider.dispose();
		if (orderIndependenceItemProvider != null) orderIndependenceItemProvider.dispose();
		if (suspendResumeItemProvider != null) suspendResumeItemProvider.dispose();
		if (concurrencyWithInformationPassingItemProvider != null) concurrencyWithInformationPassingItemProvider.dispose();
		if (deterministicChoiceItemProvider != null) deterministicChoiceItemProvider.dispose();
		if (undeterministicChoiceItemProvider != null) undeterministicChoiceItemProvider.dispose();
		if (molefContent1ItemProvider != null) molefContent1ItemProvider.dispose();
		if (molefContent2ItemProvider != null) molefContent2ItemProvider.dispose();
		if (molefContent3ItemProvider != null) molefContent3ItemProvider.dispose();
		if (molefContent4ItemProvider != null) molefContent4ItemProvider.dispose();
		if (molefContent5ItemProvider != null) molefContent5ItemProvider.dispose();
		if (molefContent6ItemProvider != null) molefContent6ItemProvider.dispose();
		if (molefTaskAndActivitiesNodeItemProvider != null) molefTaskAndActivitiesNodeItemProvider.dispose();
		if (molefTActivities1ItemProvider != null) molefTActivities1ItemProvider.dispose();
		if (molefTActivities2ItemProvider != null) molefTActivities2ItemProvider.dispose();
		if (molefTActivities3ItemProvider != null) molefTActivities3ItemProvider.dispose();
		if (molefTActivities4ItemProvider != null) molefTActivities4ItemProvider.dispose();
		if (molefTActivities5ItemProvider != null) molefTActivities5ItemProvider.dispose();
		if (molefTActivities6ItemProvider != null) molefTActivities6ItemProvider.dispose();
		if (molefTActivities7ItemProvider != null) molefTActivities7ItemProvider.dispose();
		if (molefTActivities8ItemProvider != null) molefTActivities8ItemProvider.dispose();
		if (molefSocialNodeItemProvider != null) molefSocialNodeItemProvider.dispose();
		if (molefSocial1ItemProvider != null) molefSocial1ItemProvider.dispose();
		if (molefSocial2ItemProvider != null) molefSocial2ItemProvider.dispose();
		if (molefSocial3ItemProvider != null) molefSocial3ItemProvider.dispose();
		if (molefSocial4ItemProvider != null) molefSocial4ItemProvider.dispose();
		if (molefPersonalizationNodeItemProvider != null) molefPersonalizationNodeItemProvider.dispose();
		if (molefPersonalization1ItemProvider != null) molefPersonalization1ItemProvider.dispose();
		if (molefPersonalization2ItemProvider != null) molefPersonalization2ItemProvider.dispose();
		if (molefPersonalization3ItemProvider != null) molefPersonalization3ItemProvider.dispose();
		if (molefPersonalization4ItemProvider != null) molefPersonalization4ItemProvider.dispose();
		if (molefPersonalization5ItemProvider != null) molefPersonalization5ItemProvider.dispose();
		if (molefMultimediaNodeItemProvider != null) molefMultimediaNodeItemProvider.dispose();
		if (molefMultimedia1ItemProvider != null) molefMultimedia1ItemProvider.dispose();
		if (molefMultimedia2ItemProvider != null) molefMultimedia2ItemProvider.dispose();
		if (molefMultimedia3ItemProvider != null) molefMultimedia3ItemProvider.dispose();
		if (molefMultimedia4ItemProvider != null) molefMultimedia4ItemProvider.dispose();
		if (molefMultimedia5ItemProvider != null) molefMultimedia5ItemProvider.dispose();
		if (molefMultimedia6ItemProvider != null) molefMultimedia6ItemProvider.dispose();
		if (molefMultimedia7ItemProvider != null) molefMultimedia7ItemProvider.dispose();
	}

}
